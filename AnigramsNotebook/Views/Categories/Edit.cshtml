@model AnigramsNotebook.EF.NBCategory

@using (Html.BeginForm("Edit", "Categories", new { projectId = ViewBag.ProjectId, showHidden = ViewBag.ShowHidden }, FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.NBCategoryId)
    @Html.HiddenFor(model => model.TableName)
    @Html.HiddenFor(model => model.CreatedOn)

    <div class="mdl-grid demo-content">
        <div class="demo-charts demo-cards mdl-color--white mdl-card mdl-shadow--2dp mdl-cell mdl-cell--12-col">
            <div class="mdl-card__title mdl-color-text--white mdl-color--black">
                <i class="material-icons" role="presentation">equalizer</i>
                <h2 class="mdl-card__title-text">Create New</h2>
            </div>
            <div class="mdl-card__supporting-text">
                @Html.ValidationSummary(true, "", new { @class = "" })

                <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label">
                    @Html.EditorFor(model => model.CategoryName, new { htmlAttributes = new { @class = "mdl-textfield__input" } })
                    <label class="mdl-textfield__label" for="name">Name</label>
                    @Html.ValidationMessageFor(model => model.CategoryName, "", new { @class = "mdl-textfield__error" })
                </div>

                <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label">
                    @Html.EditorFor(model => model.IconName, new { htmlAttributes = new { @class = "mdl-textfield__input" } })
                    <label class="mdl-textfield__label" for="iconName">Icon</label>
                    @Html.ValidationMessageFor(model => model.IconName, "", new { @class = "mdl-textfield__error" })
                </div>
                <span></span>

                <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label">
                    @Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "mdl-textfield__input" } })
                    <label class="mdl-textfield__label" for="color">Color</label>
                    @Html.ValidationMessageFor(model => model.Color, "", new { @class = "mdl-textfield__error" })
                </div>
                <span></span>

                <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label">
                    @Html.EditorFor(model => model.Rank, new { htmlAttributes = new { @class = "mdl-textfield__input", @pattern = @"-?[0-9]*(\.[0-9]+)?" } })
                    <label class="mdl-textfield__label" for="rank">Rank</label>
                    <span class="mdl-textfield__error">Input is not a number!</span>
                </div>

                <div>
                    <label class="mdl-switch mdl-js-switch mdl-js-ripple-effect" for="IsActive">
                        @Html.EditorFor(model => model.IsActive, new { htmlAttributes = new { @class = "mdl-switch__input" } })
                        <span class="mdl-switch__label">Display in results</span>
                    </label>
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="mdl-card__actions mdl-card--border">
                <button type="submit" class="mdl-button mdl-js-button mdl-js-ripple-effect">
                    Save Changes
                </button>
                <a href="https://material.io/icons/" target="_blank" class="mdl-button mdl-js-button mdl-js-ripple-effect">
                    Icons
                </a>
                <a href="https://material.io/guidelines/style/color.html#color-color-palette" target="_blank" class="mdl-button mdl-js-button mdl-js-ripple-effect">
                    Colors
                </a>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
