@model AnigramsNotebook.EF.NBPrompt

@using (Html.BeginForm("Edit", "Prompts", new { projectId = ViewBag.ProjectId, showHidden = ViewBag.ShowHidden }, FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.NBPromptId)
    @Html.HiddenFor(model => model.CreatedOn)

    <div class="mdl-grid demo-content">
        <div class="demo-charts demo-cards mdl-color--white mdl-card mdl-shadow--2dp mdl-cell mdl-cell--12-col">
            <div class="mdl-card__title mdl-color-text--white mdl-color--deep-orange">
                <i class="material-icons" role="presentation">help_outline</i>
                <h2 class="mdl-card__title-text">Update Question</h2>
            </div>
            <div class="mdl-card__supporting-text">
                @Html.ValidationSummary(true, "", new { @class = "" })

                <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label getmdl-select">
                    <input type="text" value="" class="mdl-textfield__input" id="nBCategoryId" readonly>
                    <input type="hidden" value="" name="nBCategoryId">
                    <label for="nBCategoryId" class="mdl-textfield__label">Category</label>
                    <ul for="nBCategoryId" class="mdl-menu mdl-menu--bottom-left mdl-js-menu" style="max-height:200px;overflow-y:auto;">
                        @foreach (var item in ViewBag.NBCategoryId)
                        {
                            <li class="mdl-menu__item" data-val="@item.Value" @(item.Selected ? "data-selected='true'" : "")>@item.Text</li>
                        }
                    </ul>
                </div>

                <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label">
                    @Html.EditorFor(model => model.Source, new { htmlAttributes = new { @class = "mdl-textfield__input" } })
                    <label class="mdl-textfield__label" for="source">Source URL</label>
                    @Html.ValidationMessageFor(model => model.Source, "", new { @class = "mdl-textfield__error" })
                </div>

                <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label">
                    @Html.TextAreaFor(model => model.Text, new { @class = "mdl-textfield__input", @rows = "9" })
                    <label class="mdl-textfield__label" for="text">Description</label>
                    @Html.ValidationMessageFor(model => model.Text, "", new { @class = "mdl-textfield__error" })
                </div>

                <div>
                    <label class="mdl-switch mdl-js-switch mdl-js-ripple-effect" for="IsActive">
                        @Html.EditorFor(model => model.IsActive, new { htmlAttributes = new { @class = "mdl-switch__input" } })
                        <span class="mdl-switch__label">Display in results</span>
                    </label>
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="mdl-card__actions mdl-card--border">
                <button type="submit" class="mdl-button mdl-js-button mdl-js-ripple-effect">
                    Save Changes
                </button>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}